plugins {
    id 'com.gradle.plugin-publish' version '0.11.0'
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'maven'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.31'
}

apply plugin: 'maven-publish'

group 'com.tailoredapps.gradle'
version '0.3.5'

// We need to keep compatibility to Java 8 here, as otherwise projects on some machines targeting Java 11 will not be
// able to load the plugin.
targetCompatibility = 1.8
sourceCompatibility = 1.8

def ext_displayName = 'Gradle Localize Plugin'
def ext_description = 'Gradle Plugin to generate Android string resource files from a localization spreadsheet.'
def ext_website = 'https://github.com/tailoredmedia/gradle-localize-plugin'
def ext_vcs = 'https://github.com/tailoredmedia/gradle-localize-plugin.git'
def ext_labels = ['gradle', 'android', 'localization']

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"

    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev612-1.25.0'

    implementation 'com.googlecode.java-diff-utils:diffutils:1.3.0'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"


    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.amshove.kluent:kluent:1.68"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    testImplementation "io.mockk:mockk:1.12.0"

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


gradlePlugin {
    plugins {
        simplePlugin {
            id = 'com.tailoredapps.gradle.localize'
            implementationClass = 'com.tailoredapps.gradle.localize.GradleLocalizePlugin'
        }
    }
}

task sourceJar(type: Jar) {
    description = "An archive of the source code for Maven Central"
    classifier = 'sources'
    from sourceSets.main.allSource
}


// configuration for publishing to the Gradle plugins portal
pluginBundle {
    website = ext_website
    vcsUrl = ext_vcs
    description = ext_description
    tags = ext_labels
}


Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (IOException e) {
    println("local.properties not found. This can be ignored, unless you want to publish. " + e.localizedMessage)
}


// publish to local maven repo for testing
publishing {
    repositories {
        maven {
            url "D:/Tasks/COOP/COPM-13606/"
        }
    }
}